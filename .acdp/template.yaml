apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: test-service
  title: Test Service
  description: Test Service for Deploying via Proton from Backstage
  tags:
    - aws
    - demo
spec:
  owner: aws solutions
  type: service

  parameters:
    - title: Provide the required information
      required:
        - component_id
        - owner
        - aws_account_id
        - aws_region
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this component is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
        aws_account_id:
          title: AWS Account ID
          type: string
          description: AWS Account ID to which the module should be deployed.
        aws_region:
          title: AWS region
          type: string
          description: AWS Region to which the module should be deployed.

  steps:

    - id: createProtonSpec
      name: Create Proton Service Spec
      action: aws:fs:write-yaml
      input:
        filename: spec.yaml
        entity:
          proton: ServiceSpec
          instances:
            - name: "dev"
              environment: "cms_environment"
              spec: {}

    - id: createProtonService
      name: Create AWS Proton Service
      action: aws:proton:create-service
      input:
        serviceName: ${{ parameters.component_id }}
        serviceSpecPath: ${{ steps.createProtonSpec.output.filename }}
        # Update the following fields to match the resources in your AWS account
        region: ${{ parameters.aws_region }}
        templateName: test-service
        templateMajorVersion: '1'

    - id: s3CatalogWrite
      name: S3 Catalog Write
      action: aws:s3:catalog:write
      input:
        componentId: ${{ parameters.component_id }}
        entity:
          apiVersion: backstage.io/v1alpha1
          kind: Component
          metadata:
            name: ${{parameters.component_id}}
            description: ${{parameters.description}}
            annotations:
              aws.amazon.com/aws-proton-service: arn:aws:proton:${{parameters.aws_region}}:${{parameters.aws_account_id}}:service/${{parameters.component_id}}
          spec:
            type: service
            lifecycle: experimental
            owner: ${{parameters.owner}}

    - id: register
      name: Register
      action: catalog:register
      input:
        catalogInfoUrl: ${{ steps.s3CatalogWrite.output.s3Url }}
  output:
    links:
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
