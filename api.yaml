openapi: 3.0.0
info:
  title: AWS IoT FleetWise API
  version: 1.0.0
  description: API endpoints for managing AWS IoT FleetWise resources.
servers:
  - url: 'https://{apiId}.execute-api.{region}.amazonaws.com/{stageName}'
    description: AWS IoT FleetWise API Server

paths:
  /associateVehicleFleet:
    post:
      summary: Associates a vehicle with a fleet.
      operationId: associateVehicleFleet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fleetId
                - vehicleName
              properties:
                fleetId:
                  type: string
                  pattern: '[a-zA-Z0-9:_-]+'
                vehicleName:
                  type: string
                  pattern: '[a-zA-Z\d\-_:]+'
      responses:
        '200':
          description: Vehicle successfully associated with fleet.
        '400':
          description: Bad request, validation errors.
        '500':
          description: Internal server error.

  /batchCreateVehicle:
    post:
      summary: Creates a group or batch of vehicles.
      operationId: batchCreateVehicle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - vehicles
              properties:
                vehicles:
                  type: array
                  items:
                    $ref: '#/components/schemas/CreateVehicleRequestItem'
      responses:
        '200':
          description: Batch of vehicles successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  vehicles:
                    type: array
                    items:
                      $ref: '#/components/schemas/CreateVehicleResponseItem'
        '400':
          description: Bad request, validation errors.
        '500':
          description: Internal server error.

  /batchUpdateVehicle:
    post:
      summary: Updates a group or batch of vehicles.
      operationId: batchUpdateVehicle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - vehicles
              properties:
                vehicles:
                  type: array
                  items:
                    $ref: '#/components/schemas/UpdateVehicleRequestItem'
      responses:
        '200':
          description: Batch of vehicles successfully updated.
        '400':
          description: Bad request, validation errors.
        '500':
          description: Internal server error.

  /createCampaign:
    post:
      summary: Creates a campaign for data collection.
      operationId: createCampaign
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCampaignRequest'
      responses:
        '200':
          description: Campaign successfully created.
        '400':
          description: Bad request, validation errors.
        '500':
          description: Internal server error.

components:
  schemas:
    CreateVehicleRequestItem:
      type: object
      required:
        - vehicleName
        - decoderManifestArn
        - modelManifestArn
      properties:
        vehicleName:
          type: string
          pattern: '[a-zA-Z\d\-_:]+'
        decoderManifestArn:
          type: string
        modelManifestArn:
          type: string
        associationBehavior:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'

    CreateVehicleResponseItem:
      type: object
      properties:
        vehicleName:
          type: string
        arn:
          type: string
        thingArn:
          type: string

    UpdateVehicleRequestItem:
      type: object
      required:
        - vehicleName
      properties:
        vehicleName:
          type: string
          pattern: '[a-zA-Z\d\-_:]+'
        decoderManifestArn:
          type: string
        modelManifestArn:
          type: string
        attributeUpdateMode:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: string

    CreateCampaignRequest:
      type: object
      required:
        - name
        - collectionScheme
      properties:
        name:
          type: string
          pattern: '[a-zA-Z\d\-_:]+'
        collectionScheme:
          type: object
          # Detailed structure for CollectionScheme should be added
        compression:
          type: string
          enum: [OFF, SNAPPY]
        dataDestinationConfigs:
          type: array
          items:
            type: object
            # Detailed structure for DataDestinationConfig should be added
        dataExtraDimensions:
          type: array
          items:
            type: string
        description:
          type: string
          maxLength: 2048
        diagnosticsMode:
          type: string
          enum: [OFF, SEND_ACTIVE_DTCS]
        expiryTime:
          type: number
        priority:
          type: integer
        signalCatalogArn:
          type: string
        signalsToCollect:
          type: array
          items:
            type: object
            # Detailed structure for SignalsToCollect should be added
        spoolingMode:
          type: string
        startTime:
          type: number
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        targetArn:
          type: string

    Tag:
      type: object
      properties:
        Key:
          type: string
        Value:
          type: string
